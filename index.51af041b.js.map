{"mappings":"ACEA,IAAM,EAAgB,SAAC,CAAvB,EACE,IAAM,EAAY,EAAG,aAAa,CAAC,SAC/B,EAAkB,GAElB,GAAa,EAAU,YAAY,CAAC,SACtC,CAAA,EAAkB,EAAU,YAAY,CAAC,OAD3C,EAIA,IAAM,EAAuB,EAAgB,MAAM,CAAC,SAEpD,GAAI,AAAyB,KAAzB,EAA6B,CAC/B,IAAM,EAAY,EAAgB,KAAK,CAAC,EAAG,GACrC,EAAa,EAChB,KAAK,CAAC,GACN,WAAW,GAEd,EAAmB,GAAe,MAAA,CAAb,EAAU,KAAc,MAAA,CAAX,EACpC,QAEA,AAAI,EACK,EAAgB,MAAM,CAAC,GAAG,WAAW,GAAK,EAAgB,KAAK,CAAC,GAGlE,GAAmB,IAC5B,EAIA,AAFsB,SAAS,gBAAgB,CAAC,UAElC,OAAO,CAAC,SAAC,CAAvB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAmB,EAAc,GACjC,EAAe,EAAQ,aAAa,CAAC,SAEvC,GACF,EAAM,WAAW,CAAG,EACpB,EAAa,YAAY,CAAC,cAAe,KAEzC,EAAM,WAAW,CAAG,QACpB,EAAa,YAAY,CAAC,cAAe,UAG3C,EAAM,SAAS,CAAC,GAAG,CAAC,eAEpB,EAAQ,YAAY,CAAC,EAAO,EAAQ,UAAU,CAChD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar inputTakeName = function(el) {\n    var inputName = el.querySelector(\"input\");\n    var wordCapitalized = \"\";\n    if (inputName && inputName.hasAttribute(\"name\")) wordCapitalized = inputName.getAttribute(\"name\");\n    var indexLetterUpperCase = wordCapitalized.search(/[A-Z]/);\n    if (indexLetterUpperCase !== -1) {\n        var firstWord = wordCapitalized.slice(0, indexLetterUpperCase);\n        var secondWord = wordCapitalized.slice(indexLetterUpperCase).toLowerCase();\n        wordCapitalized = \"\".concat(firstWord, \" \").concat(secondWord);\n    }\n    if (wordCapitalized) return wordCapitalized.charAt(0).toUpperCase() + wordCapitalized.slice(1);\n    return wordCapitalized || null;\n};\nvar fieldElements = document.querySelectorAll(\".field\");\nfieldElements.forEach(function(element) {\n    var label = document.createElement(\"label\");\n    var inputElementName = inputTakeName(element);\n    var inputElement = element.querySelector(\"input\");\n    if (inputElement) {\n        label.textContent = inputElementName;\n        inputElement.setAttribute(\"placeholder\", inputElementName);\n    } else {\n        label.textContent = \"Input\";\n        inputElement.setAttribute(\"placeholder\", \"input\");\n    }\n    label.classList.add(\"field-label\");\n    element.insertBefore(label, element.firstChild);\n});\n\n//# sourceMappingURL=index.51af041b.js.map\n","'use strict';\n\nconst inputTakeName = (el) => {\n  const inputName = el.querySelector('input');\n  let wordCapitalized = '';\n\n  if (inputName && inputName.hasAttribute('name')) {\n    wordCapitalized = inputName.getAttribute('name');\n  }\n\n  const indexLetterUpperCase = wordCapitalized.search(/[A-Z]/);\n\n  if (indexLetterUpperCase !== -1) {\n    const firstWord = wordCapitalized.slice(0, indexLetterUpperCase);\n    const secondWord = wordCapitalized\n      .slice(indexLetterUpperCase)\n      .toLowerCase();\n\n    wordCapitalized = `${firstWord} ${secondWord}`;\n  }\n\n  if (wordCapitalized) {\n    return wordCapitalized.charAt(0).toUpperCase() + wordCapitalized.slice(1);\n  }\n\n  return wordCapitalized || null;\n};\n\nconst fieldElements = document.querySelectorAll('.field');\n\nfieldElements.forEach((element) => {\n  const label = document.createElement('label');\n  const inputElementName = inputTakeName(element);\n  const inputElement = element.querySelector('input');\n\n  if (inputElement) {\n    label.textContent = inputElementName;\n    inputElement.setAttribute('placeholder', inputElementName);\n  } else {\n    label.textContent = 'Input';\n    inputElement.setAttribute('placeholder', 'input');\n  }\n\n  label.classList.add('field-label');\n\n  element.insertBefore(label, element.firstChild);\n});\n"],"names":["inputTakeName","el","inputName","querySelector","wordCapitalized","hasAttribute","getAttribute","indexLetterUpperCase","search","firstWord","slice","secondWord","toLowerCase","concat","charAt","toUpperCase","fieldElements","document","querySelectorAll","forEach","element","label","createElement","inputElementName","inputElement","textContent","setAttribute","classList","add","insertBefore","firstChild"],"version":3,"file":"index.51af041b.js.map"}